name: Production - Google Cloud Run

on:
  push:
    branches:
      - main
    tags:
      - deploy-production-v**

jobs:
  build:
    # if: startsWith(github.ref, 'refs/tags/deploy-production-v')
    environment: production
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          token_format: 'access_token'
      
      
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ secrets.REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      
      
      - name: Create .env File
        run: |
          echo "PYTHONDONTWRITEBYTECODE=${{ secrets.PYTHONDONTWRITEBYTECODE }}" >> .env
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> .env
          echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> .env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          # echo "PORT=${{ secrets.PORT }}" >> .env
          echo "FLASK_ENV=production" >> .env
      
      
      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
        
      
      
  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          token_format: 'access_token'
        
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          image: '${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.SERVICE }}:${{ github.sha }}'
          service: ${{ secrets.SERVICE }}
          region: ${{ secrets.REGION }}
          env_vars: |
            PYTHONDONTWRITEBYTECODE=${{ secrets.PYTHONDONTWRITEBYTECODE }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            FLASK_APP=${{ secrets.FLASK_APP }}
            APP_NAME=${{ secrets.APP_NAME }}
            APP_URL=${{ secrets.APP_URL }}
            FLASK_ENV=production
      
      
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}